*TextFormComplete.txt*  Convert textual options into completion candidates.

		     TEXT FORM COMPLETE    by Ingo Karkat
							*TextFormComplete.vim*
description			|TextFormComplete-description|
usage				|TextFormComplete-usage|
installation			|TextFormComplete-installation|
configuration			|TextFormComplete-configuration|
integration			|TextFormComplete-integration|
limitations			|TextFormComplete-limitations|
known problems			|TextFormComplete-known-problems|
todo				|TextFormComplete-todo|
history				|TextFormComplete-history|

==============================================================================
DESCRIPTION					*TextFormComplete-description*

This plugin can transform textual options (in the form FOO|BAR, as they are
often found in templates or snippets) into a printed list or insert-mode
completion, which offer all alternatives ("FOO" and "BAR" in this example),
and allow to choose one and replace the full options block with it.

==============================================================================
USAGE						      *TextFormComplete-usage*
								       *q_bar*
q|			List all individual alternatives in the text form
			close to the cursor and allow the user to choose one,
			which then replaces the full options block.
[count]q|		Replace the full options block with the [count]'th
			alternative from it.
								*i_CTRL-X_bar*
CTRL-X |		Convert the text form before the cursor into the
			individual alternatives and offer them for completion.

SYNTAX						     *TextFormComplete-syntax*

The text forms can be in simple and extended syntax. The simple syntax is just
a list of word characters (without whitespace!), delimited by | characters:
    FOO|BAZ|QUUX ~
You can include [], (), + and |, too, but you have to escape with a backslash.

The extended syntax is bracketed by [...], and its alternatives can contain
whitespace and any other characters.
    [FOO+BAR|My BAZ|The QUUX!] ~
Additionally, you can append an optional explanation to each alternative. This
will only be shown in the completion menu, but is not inserted into the
buffer. The explanation must be enclosed in (...) and come after the
alternative text, separated by a <Space>:
    [FOO (default)|BAZ (softer)|QUUX (the special choice)] ~

EXAMPLE						    *TextFormComplete-example*

==============================================================================
INSTALLATION				       *TextFormComplete-installation*

This script is packaged as a |vimball|. If you have the "gunzip" decompressor
in your PATH, simply edit the *.vba.gz package in Vim; otherwise, decompress
the archive first, e.g. using WinZip. Inside Vim, install by sourcing the
vimball or via the |:UseVimball| command. >
    vim TextFormComplete.vba.gz
    :so %
To uninstall, use the |:RmVimball| command.

DEPENDENCIES				       *TextFormComplete-dependencies*

- Requires Vim 7.0 or higher.
- SwapIt (vimscript #2294) plugin (optional)

==============================================================================
CONFIGURATION				      *TextFormComplete-configuration*

For a permanent configuration, put the following commands into your |vimrc|:

						      *TextFormComplete-remap*
If you want to use different mappings, map your keys to the
<Plug>(TextFormComplete) mapping targets _before_ sourcing the script (e.g.
in your |vimrc|): >
    imap <C-x><Bar> <Plug>(TextFormComplete)
    nmap q<Bar> <Plug>(TextFormComplete)
<

==============================================================================
INTEGRATION					*TextFormComplete-integration*

When the SwapIt plugin is installed, the completed alternatives are defined as
a |:SwapList|, so you can change your initial completed choice and move
through all alternatives just by pressing CTRL-A / CTRL-X on them. (With a
visual selection, this even works for alternatives containing whitespace!)

==============================================================================
LIMITATIONS					*TextFormComplete-limitations*

KNOWN PROBLEMS				     *TextFormComplete-known-problems*

TODO						       *TextFormComplete-todo*

IDEAS						      *TextFormComplete-ideas*

==============================================================================
HISTORY						    *TextFormComplete-history*

GOAL
First published version.

0.01	21-Aug-2012
Started development.

==============================================================================
Copyright: (C) 2012 Ingo Karkat
The VIM LICENSE applies to this plugin; see |copyright|.

Maintainer:	Ingo Karkat <ingo@karkat.de>
==============================================================================
 vim:tw=78:ts=8:ft=help:norl:
